{"version":3,"sources":["components/Person.js","components/Filter.js","components/PersonForm.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Person","persons","search","handleDelete","map","person","index","nameValue","name","toLowerCase","personDetails","id","key","phone","onClick","e","indexOf","Filter","handleSearchChange","value","type","onChange","PersonForm","handleSubmit","newName","newPhone","handleInputChange","handlePhoneChange","onSubmit","baseUrl","axios","get","then","response","data","newObject","post","userId","delete","put","Notification","errorClass","message","notifStatus","className","App","useState","setPersons","setNewName","setNewPhone","setSearch","errorMessage","setErrorMessage","setNotifStatus","useEffect","personServices","initialPersons","console","log","preventDefault","inputText","target","newPersonObject","exist","filter","obj","window","confirm","updatedPersons","newPerson","concat","splice","returnedPerson","setTimeout","slice","i","returnNewDb","filteredItems","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.da1f0a2e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Person = ({ persons, search, handleDelete}) => {\r\n\t\r\n\tconst rows = () => persons.map((person, index)=> \r\n    \t{\r\n\r\n\t\t\tlet nameValue = person.name.toLowerCase();\r\n\r\n\t\t\tlet personDetails = {\r\n\t\t\t\tname: person.name,\r\n\t\t\t\tid: person.id,\r\n\t\t\t\tindex:index\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//console.log(\"Person Details: \",person)\r\n\r\n    \t\tif(search == \"\"){\r\n\t\t\t\treturn <li key={index} >\r\n\t\t\t\t\t\t\t{person.name} {person.phone} \r\n\t\t\t\t\t\t\t<button onClick={(e)=>{handleDelete(e,personDetails)}}>Delete</button>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t}\r\n\r\n\t\t\telse{\r\n\t\t\t\tif(nameValue.indexOf(search) >= 0){\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<li key={index}>\r\n\t\t\t\t\t\t\t{person.name} \r\n\t\t\t\t\t\t\t{person.phone} \r\n\t\t\t\t\t\t\t<button onClick={(e)=>{handleDelete(e,personDetails)}}>Delete</button>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse{\r\n\t\t\t\t\treturn <></>\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n  \t);\r\n\r\n  \treturn(\r\n  \t\t<ul>\r\n  \t\t\t{rows()}\r\n  \t\t</ul>\r\n  \t)\r\n};\r\n\r\nexport default Person;\r\n","import React, { useState} from 'react';\r\n\r\n\r\nconst Filter = ({search,handleSearchChange}) =>{\r\n\r\n\treturn(\r\n\t\t<div>\r\n\t        filter shown with \r\n\t        <input \r\n\t          value={search} \r\n\t          type=\"text\" \r\n\t          onChange={handleSearchChange}\r\n\t        />\r\n      \t</div>\r\n\t)\r\n\r\n}\r\n\r\nexport default Filter","import React, { useState} from 'react';\r\n\r\nconst PersonForm = ({handleSubmit,newName,newPhone,handleInputChange,handlePhoneChange}) =>{\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t        <div>\r\n\t          name: \r\n\t          <input \r\n\t            value={newName} \r\n\t            type=\"text\" \r\n\t            onChange={handleInputChange}\r\n\t          />\r\n\t        </div>\r\n\t        <div>\r\n\t          number:\r\n\t          <input \r\n\t            value={newPhone}\r\n\t            type=\"text\"\r\n\t            onChange={handlePhoneChange}\r\n\t          />\r\n\t        </div>\r\n\t        <div>\r\n\t          <button \r\n\t            type=\"submit\"\r\n\t          >\r\n\t            add\r\n\t          </button>\r\n\t        </div>\r\n      \t</form>\r\n\t)\r\n\r\n}\r\n\r\nexport default PersonForm","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\n/**\r\n * retireves all user in json db\r\n * @method\r\n */\r\nconst getAll = () =>{\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\n/** \r\n * create new person object\r\n * @method  \r\n */ \r\nconst create = newObject =>{\r\n    const request = axios.post(baseUrl,newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\n/**\r\n * delete selected user\r\n * @method\r\n */\r\nconst deleteUser = userId =>{\r\n    const request = axios.delete(baseUrl+\"/\"+userId)\r\n    return request.then(response => response.data)\r\n}\r\n\r\n/**\r\n * Update number\r\n * @method\r\n */\r\nconst updateNumber = (userId,newObject) =>{\r\n    const request = axios.put(baseUrl+\"/\"+userId,newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {\r\n    getAll,\r\n    create,\r\n    deleteUser,\r\n    updateNumber\r\n}","import React from 'react'\r\n\r\n\r\nconst Notification = ({message,notifStatus}) =>{\r\n\r\n    let errorClass;\r\n\r\n    if(message == null){\r\n        return null;\r\n    }\r\n\r\n    if(notifStatus == \"add\"){\r\n        errorClass = \"notification add\"\r\n    }\r\n    else{\r\n        errorClass = \"notification delete\"\r\n    }\r\n\r\n    return(\r\n        <div className={errorClass}>\r\n            {message}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Notification","import React, {useState, useEffect} from \"react\";\r\n\r\nimport Person from \"./components/Person\";\r\nimport Filter from \"./components/Filter\";\r\nimport PersonForm from \"./components/PersonForm\";\r\n\r\nimport personServices from \"./services/persons\"\r\nimport Notification from './components/Notification'\r\n\r\nimport './App.css'\r\n\r\n\r\nconst App = () => {\r\n\r\n  const [persons, setPersons] = useState([])\r\n\r\n  const [newName, setNewName]    = useState('')\r\n  const [newPhone, setNewPhone]  = useState('')\r\n  const [search,setSearch]       = useState('')\r\n  const [errorMessage,setErrorMessage] = useState()\r\n\r\n  const [notifStatus,setNotifStatus] = useState();\r\n\r\n  /**\r\n   * Initial load of phone json\r\n   */\r\n  useEffect(()=>{\r\n    personServices\r\n      .getAll()\r\n      .then(initialPersons =>{\r\n        setPersons(initialPersons)\r\n\r\n        console.log(\"Persons: \",initialPersons)\r\n      })\r\n  },[])\r\n\r\n  /**\r\n   * State name input handler\r\n   * @method\r\n   */\r\n  const handleInputChange = e =>{\r\n    const inputText = e.target.value;\r\n\r\n    setNewName(inputText);\r\n  }\r\n\r\n  /**\r\n   * State phone input handler\r\n   * @method\r\n   */\r\n  const handlePhoneChange = e =>{\r\n    e.preventDefault();\r\n    const inputText = e.target.value;\r\n\r\n    setNewPhone(inputText);\r\n  }\r\n\r\n  /**\r\n   * Delete handler\r\n   * @method\r\n   * use this https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\r\n   * array.find(function\r\n   * delete sample: https://alligator.io/react/axios-react/\r\n   */\r\n  const handleDelete = (e,personDetails) =>{\r\n    const verify = window.confirm(`Remove ${personDetails.name} ?`)\r\n\r\n\r\n    if(verify){\r\n\r\n      setNotifStatus(\"delete\")\r\n      setErrorMessage(`Information of ${personDetails.name} has already been removed from server`)\r\n\r\n      setTimeout(()=>{\r\n        setErrorMessage(null)\r\n      },5000)\r\n\r\n\r\n      let i = personDetails.index;\r\n      personServices\r\n        .deleteUser(personDetails.id)\r\n        .then(returnNewDb =>{\r\n          /**\r\n           * new array from immutable state\r\n           */\r\n          const filteredItems = persons.slice(0, i).concat(persons.slice(i + 1, persons.length))\r\n  \r\n          setPersons(filteredItems)\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Submits new phone user to notes json db\r\n   * @method\r\n   */\r\n  const handleSubmit = e =>{\r\n    e.preventDefault();\r\n\r\n\r\n    const newPersonObject = {\r\n      name: newName,\r\n      phone: newPhone\r\n    }\r\n\r\n    let exist = false;\r\n\r\n    const result = persons.filter((obj,index) => {\r\n      if(obj.name === newName){\r\n\r\n        const verify = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`);\r\n\r\n        if(verify){\r\n          personServices\r\n          .updateNumber(obj.id,newPersonObject)\r\n          .then(updatedPersons =>{\r\n            /**\r\n             * Sets and find new perons\r\n             */\r\n            const newPerson = persons.concat();\r\n            newPerson.splice(index,1,updatedPersons)\r\n            setPersons(newPerson)\r\n          })\r\n        }\r\n        /**\r\n         * Updates peron number if exist.\r\n         * to update state and remove exising array.\r\n         */\r\n        exist = true;\r\n        setNewName('')\r\n        setNewPhone('')\r\n      }\r\n    })\r\n\r\n    if(exist == false){\r\n      personServices\r\n        .create(newPersonObject)\r\n        .then(returnedPerson => {\r\n\r\n          setNotifStatus(\"add\")\r\n          setErrorMessage(`Added ${newName}`)\r\n\r\n          setTimeout(()=>{\r\n            setErrorMessage(null)\r\n          },5000)\r\n\r\n          console.log(\"test\",returnedPerson)\r\n\r\n          setPersons(persons.slice(0).concat(returnedPerson))\r\n          setNewName('')\r\n          setNewPhone('')\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * finds and replace existing person\r\n   */\r\n  const insertNew = (newObject) =>{\r\n    var setPersons = persons.concat();\r\n\r\n    // let foundIndex = setPersons.findIndex(element => element.id === item.id)\r\n    // items.splice(foundIndex, 1, item)\r\n  }\r\n\r\n  /**\r\n   * Update existing user number\r\n   * todo - retrieve number\r\n   */\r\n  const updateNumber = () =>{\r\n\r\n  }\r\n\r\n  /**\r\n   * Display filtered results\r\n   * @method\r\n   */\r\n  const handleSearchChange = e =>{\r\n    e.preventDefault();\r\n    const inputText = e.target.value;\r\n\r\n    setSearch(inputText);\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification \r\n        notifStatus={notifStatus}\r\n        message={errorMessage} \r\n      />\r\n      <Filter \r\n        search={search} \r\n        handleSearchChange={handleSearchChange} \r\n      />\r\n\r\n      <h2>Add a new</h2>\r\n\r\n      <PersonForm \r\n        handleSubmit={handleSubmit}\r\n        handleInputChange={handleInputChange}\r\n        handlePhoneChange={handlePhoneChange}\r\n        newPhone={newPhone}\r\n        newName={newName}\r\n      />\r\n\r\n      <h2>Numbers</h2>\r\n      <div>\r\n        <Person\r\n          persons={persons} \r\n          search={search}\r\n          handleDelete={handleDelete}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}